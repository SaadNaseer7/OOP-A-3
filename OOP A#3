class Shape {
public:
    virtual ~Shape() = default;  
    virtual double area() const = 0;  };

#pragma once
#include "Shape.h"

class Circle : public Shape {
private:
    double radius;

public:
    Circle(double r) : radius(r) {}
    double area() const override {
        return 3.14 * radius * radius;
    }
};

#pragma once
#include "Shape.h"

class Rectangle : public Shape {
private:
    double length;
    double width;

public:
    Rectangle(double l, double w) : length(l), width(w) {}
    double area() const override {
        return length * width;
    }
};
